BUILDING THE GAME

Change directory to game and make a CMake build directory:

  cd game/
  mkdir build/
  cd build/

You can build the game using:

  cmake ../
  make

Or if you prefer running it in parallel:

  cmake ../
  make -j8

Where `-j8' means `use 8 cores'.

There used to be a standalone headless server. This has been removed, this may
be reimplemented after a playable prototype has been released.

INSTALLING THE GAME

After inserting an original AoE CD-ROM, you have to install the game or copy the
data folder and language.dll to a folder that is accessible while the game is
running. When running the game, it will load all game assets during startup.
Once the main menu is loaded, you can eject the CD-ROM.

The provided setup program is not necessary to run in order to play the game.

INSTALLATION RECIPIES

Ubuntu based:

NOTE while the project can be compiled fine on Linux. The game looks for
hardcoded paths to the legacy TTF fonts. You have to modify the source code to
make this work, or cross-compile and install and run the game using Wine.

This project has been built primarly on Xubuntu 22 and Windows. The following
packages are needed:

  gcc make libssl-dev pkg-config libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev

Windows:

In Visual Studio, you can open the CMake project and install the dependencies
using vcpkg or manually.

Currently, empires.exe and most tools are known to compile and run successfully.
Both can be compiled either with a native MinGW toolchain or within cygwin with
its MinGW cross-compiler. Depending on your toolchain, you probably need to
specify custom environment variables to make everything correctly.

All dependencies can be downloaded from libsdl.org. You don't have to compile
these as long as you are using MinGW or Microsoft's Visual C++ Compiler (or any
other compiler that supports the provided binaries).
