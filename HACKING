Interesting and useful information for modifying the source code is
located here.

CONTRIBUTING

If you are really willing to help improve development, you can try to implement
missing stuff, start writing/improving documentation or fix a couple of bugs.
You have to grok basic stuff about POSIX and the C programming language to be
able to contribute. If you do not know what these things mean nor SDL2 or bash
then you will have a hard time with contributing.

Game engine and windows API specific file formats are discussed in doc/ with
pointer to external sources. We have written tools for some of these file
formats that you can find in section TOOLS.

Memory allocation
Since there is a lot of c++ boilerplate code, we have replaced some allocations
with fixed arrays. Most of them are marked with noptr.

Markers
Several markers are placed in code to make it easier to search for modifications
in the codebase. Some of them include:

todo  need to complete this task at some point in time
xxx   not sure whether this is correct (may be a question)
remap type of variable in original code is different in our port
noptr converted dynamic memory to fixed array
fixme bug/glitch that needs to be fixed

Modified blocks of code are marked with `<' and `>'. The first is our own code
and the latter indicates that the dissassembled code follows.

TOOLS

In tools/ we have provided multiple freestanding programs that inspect the
original data files and make porting the game a lot easier.

These tools include:
convert: dump binary compatible source file
pestat: dump standard portable executable members and parameters
drs: dump assets while traversing a data resource set(=drs)
str: extract strings as utf7 data ignoring file format or empty strings
rsrc: fetches string data from portable executables
